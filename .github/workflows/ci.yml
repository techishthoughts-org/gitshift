name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*.*.*'  # Match semantic version tags (v1.0.0, v2.1.3, etc.)
  pull_request:
    branches: [main, develop]

# Environment variables
env:
  GO_VERSION: '1.23'
  GO111MODULE: 'on'

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for version calculation

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}

      - name: Run tests
        run: |
          go mod download
          go test -v -race -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... ./...

      - name: Run static analysis
        run: |
          # Run go vet
          go vet ./...

          # Run staticcheck if available
          if command -v staticcheck >/dev/null; then
            staticcheck ./...
          fi

  build:
    name: Build and Release
    needs: test
    # Only run on version tags (v1.0.0, v2.3.4, etc.)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version from tag
        id: version
        run: |
          # Remove 'v' prefix from tag (v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/v}
          # Validate version format (basic check)
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "::error::Invalid version format: $VERSION. Expected format: v1.0.0 or v1.0.0-rc.1"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=v$VERSION" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          mkdir -p dist

          # Build for multiple platforms
          platforms=(
            "linux/amd64"
            "darwin/amd64"
            "windows/amd64"
          )

          for platform in "${platforms[@]}"; do
            GOOS=${platform%/*}
            GOARCH=${platform#*/}
            output="gitshift-$GOOS-$GOARCH"

            if [ "$GOOS" = "windows" ]; then
              output="$output.exe"
            fi

            echo "Building $output..."
            CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build \
              -ldflags="-X main.version=${{ env.VERSION }} -s -w" \
              -o "dist/$output" .

            # Generate checksums
            (cd dist && shasum -a 256 "$output" > "$output.sha256")
          done

          # Create a source tarball
          tar -czvf "dist/gitshift-${{ env.VERSION }}.tar.gz" --exclude='.git' --exclude='dist' .
          (cd dist && shasum -a 256 "gitshift-${{ env.VERSION }}.tar.gz" > "gitshift-${{ env.VERSION }}.tar.gz.sha256")

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "gitshift ${{ env.VERSION }}"
          body: |
            ## What's Changed

            <!-- Add your release notes here or use generate_release_notes: true -->

            ## Checksums

            ```
            # SHA-256 checksums
            $(cat dist/*.sha256)
            ```

            ## Installation

            ### Binary Releases

            Download the appropriate binary for your system from the assets below.

            ### From Source

            ```bash
            # Download and verify
            curl -L -o gitshift-${{ env.VERSION }}.tar.gz https://github.com/techishthoughts-org/gitshift/releases/download/${{ env.TAG_NAME }}/gitshift-${{ env.VERSION }}.tar.gz
            curl -L -o gitshift-${{ env.VERSION }}.tar.gz.sha256 https://github.com/techishthoughts-org/gitshift/releases/download/${{ env.TAG_NAME }}/gitshift-${{ env.VERSION }}.tar.gz.sha256

            # Verify checksum
            shasum -a 256 -c gitshift-${{ env.VERSION }}.tar.gz.sha256

            # Extract and install
            tar -xzf gitshift-${{ env.VERSION }}.tar.gz
            # Follow installation instructions...
            ```
          files: |
            dist/*
          draft: false
          prerelease: ${{ contains(env.TAG_NAME, '-') }}  # Mark as pre-release if tag contains '-' (e.g., v1.0.0-rc.1)
          generate_release_notes: true
          discussion_category_name: 'Announcements'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
